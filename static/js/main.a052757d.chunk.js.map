{"version":3,"sources":["redux/actions.js","Components/section/Section.js","Components/form/Form.js","Components/contactsList/contactItem/ContactItem.js","Components/contactsList/ContactsList.js","Components/filter/Filter.js","App/App.js","redux/reducer.js","redux/store.js","index.js"],"names":["loadContacts","createAction","addContact","delContact","filter","Section","title","children","_INITIAL_STATE_","name","number","connect","state","contacts","useState","setState","handleChange","target","value","trim","type","onChange","mask","onClick","e","preventDefault","some","i","toLowerCase","alert","StyledButton","styled","button","Contact","contact","onDelete","id","map","hidden","ContactItem","isMount","localStorage","getItem","JSON","parse","setItem","stringify","ContactsList","f","reducer","createReducer","payload","push","uuidv4","filtered","startsWith","split","join","store","configureStore","ReactDOM","render","document","getElementById"],"mappings":"iMAEaA,EAAaC,YAAa,kBAC1BC,EAAWD,YAAa,iBACxBE,EAAWF,YAAa,iBACxBG,EAAOH,YAAa,Y,OCWlBI,I,EAAAA,EAbf,YAAwD,IAAD,IAArCC,aAAqC,MAA/B,mBAA+B,EAAXC,EAAW,EAAXA,SACxC,OACI,oCACI,6BAAKD,IACJC,M,uCCDPC,EAAgB,CAClBC,KAAK,GACLC,OAAQ,IA2DGC,eANS,SAACC,GACvB,MAAO,CACLC,SAAUD,EAAMC,YAIoB,CAAEX,cAA3BS,EAxDJ,SAAC,GAAyB,IAAxBE,EAAuB,EAAvBA,SAASX,EAAc,EAAdA,WAElB,EAAuBY,mBAASN,GAAhC,mBAAOI,EAAP,KAAaG,EAAb,KAEMC,EAAa,SAAC,GAAyB,IAAD,IAAvBC,OAAQR,EAAe,EAAfA,KAAKS,EAAU,EAAVA,MAC9BH,GAAS,SAAAH,GAAK,kCAAOA,GAAP,kBAAcH,EAAOS,EAAMC,aAqBzC,OACI,iCACI,kCACI,sCACA,uBAAOD,MAAON,EAAMH,KAAMW,KAAK,OAAOX,KAAK,OAAOY,SAAUL,OAEhE,kCACI,wCACA,cAAC,IAAD,CAAWM,KAAK,iBAAiBJ,MAAON,EAAMF,OAAQU,KAAK,MAAMX,KAAK,SAASY,SAAUL,OAE7F,wBAAQI,KAAK,SAASG,QA5Bf,SAACC,GAChBA,EAAEC,iBAEF,IAAOhB,EAAaG,EAAbH,KAAKC,EAAQE,EAARF,OAETG,EAASa,MAAK,SAAAC,GACb,OAAOA,EAAEjB,SAASA,GAAUiB,EAAElB,KAAKmB,gBAAgBnB,EAAKmB,iBAExDC,MAAM,QAAD,OAASpB,EAAT,wBAKTP,EAAW,CAACO,OAAKC,WAEjBK,EAAS,eAAIP,MAaL,+B,QC3CVsB,E,MAAaC,EAAOC,OAAR,6EAuBHC,MAlBf,YAAuC,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,SACvB,OACI,+BACI,iCAAOD,EAAQzB,KAAf,KAAuByB,EAAQxB,UAC/B,cAACoB,EAAD,CAAcM,GAAIF,EAAQE,GAAIb,QAASY,EAAvC,wBCeGxB,mBAAQ,kBAAe,CAACE,SAAhB,EAAEA,YAAyB,CAAEV,cAArCQ,EAtBf,YAA2C,IAAxBE,EAAuB,EAAvBA,SAAUV,EAAa,EAAbA,WAEnBgC,EAAW,SAACX,GAAD,OAAKrB,EAAWqB,EAAEP,OAAOmB,KAE1C,OACI,6BACKvB,EAASwB,KAAI,SAAAH,GAAO,OAAIA,EAAQI,QAC7B,cAACC,EAAD,CAA8BL,QAASA,EAASC,SAAUA,GAAxCD,EAAQE,YCU3BzB,I,EAAAA,eAAQ,SAACC,GAAD,MAAU,CAACM,MAAON,EAAMR,UAAS,CAAEA,UAA3CO,EAlBf,YAAqC,IAApBP,EAAmB,EAAnBA,OAAmB,IAAXc,aAAW,MAAL,GAAK,EAIhC,OAEI,qCACI,iDACA,uBAAOA,MAAOA,EAAOT,KAAK,SAASW,KAAK,OAAOC,SANzC,SAACG,GAAD,OAAOpB,EAAOoB,EAAEP,OAAOC,MAAMC,iBCE3CqB,GAAU,EAmCC7B,eAAQ,kBAAe,CAACE,SAAhB,EAAEA,YAA0B,CAACb,gBAArCW,EAjCL,SAAC,GAA+B,IAAD,IAA7BE,gBAA6B,MAApB,GAAoB,EAAhBb,EAAgB,EAAhBA,aAUrB,OARIwC,GAAWC,aAAaC,QAAQ,aAChCF,GAAU,EACVxC,EAAa2C,KAAKC,MAAMH,aAAaC,QAAQ,eAG7CD,aAAaI,QAAQ,WAAWF,KAAKG,UAAUjC,IAI3C,qCACI,2CACA,cAAC,EAAD,CAASP,MAAM,GAAf,SACI,cAAC,EAAD,MAEJ,eAAC,EAAD,CAASA,MAAM,WAAf,UACI,cAAC,EAAD,IACA,cAACyC,EAAD,a,eCpBdC,EAAE,SAACpC,GAAD,MAAU,CAACR,OAAQQ,EAAMR,OAASQ,EAAMR,OAAS,KAG5C6C,EAAQC,YAAc,CAACrC,SAAS,GAAIT,OAAO,KAAtB,mBAChCJ,GAAe,SAACY,EAAD,OAAQuC,EAAR,EAAQA,QAAR,mBAAC,eAAuBH,EAAEpC,IAA1B,IAAkCC,SAAUD,EAAMC,SAAN,sBAAqBD,EAAMC,UAA3B,YAAwCsC,IAAxC,YAAuDA,QADlF,cAEhCjD,GAAa,SAACU,EAAD,GAAoB,IAAZuC,EAAW,EAAXA,QACftC,EAAWD,EAAMC,SAAN,YAAqBD,EAAMC,UAAY,GAExD,OADAA,EAASuC,KAAK,CAAChB,GAAGiB,eAAU5C,KAAK0C,EAAQ1C,KAAMC,OAAOyC,EAAQzC,OAAQ4B,QAAO,IACtE,YAAC,eAAIU,EAAEpC,IAAd,IAAsBC,gBALU,cAOhCV,GAAa,SAACS,EAAD,OAAQuC,EAAR,EAAQA,QAAR,mBAAC,eAAuBH,EAAEpC,IAA1B,IAAkCC,SAAUD,EAAMC,SAAWD,EAAMC,SAAST,QAAO,SAAAuB,GAAC,OAAEA,EAAES,KAAKe,KAAS,QAPnF,cAQhC/C,GAAS,SAACQ,EAAD,GAAoB,IAAZuC,EAAW,EAAXA,QACXG,EAAS1C,EAAMC,SAASwB,KAAI,SAAAV,GAChC,IAAMW,GAAUX,EAAElB,KAAKmB,cAAc2B,WAAWJ,EAAQK,MAAM,KAAKC,KAAK,IAAI7B,eAC5E,OAAO,2BAAID,GAAX,IAAcW,cAEhB,MAAQ,CAAClC,OAAQ+C,EAAStC,SAASyC,MAbH,ICPnBI,EAFDC,YAAe,CAACV,Y,YCK9BW,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACD,cAAC,EAAD,MAECI,SAASC,eAAe,W","file":"static/js/main.a052757d.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\"\n\nexport const loadContacts=createAction(\"@/contact/load\")\nexport const addContact=createAction(\"@/contact/add\")\nexport const delContact=createAction(\"@/contact/del\")\nexport const filter=createAction(\"@/filter\")","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Section({title=\"Title of Section\", children}) {\n    return (\n        <section>\n            <h2>{title}</h2>\n            {children}\n        </section>\n    )\n}\n\nSection.propTypes = {\n    title: PropTypes.string,\n}\n\nexport default Section\n\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport InputMask from 'react-input-mask';\nimport { connect } from \"react-redux\";\nimport {addContact} from '../../redux/actions'\n\nconst _INITIAL_STATE_={\n    name:\"\",\n    number: \"\",\n}\n\nconst Form=({contacts,addContact})=>{   \n    \n    const [state,setState]=useState(_INITIAL_STATE_)\n\n    const handleChange=({target:{name,value}})=>{\n        setState(state=>({...state,[name]: value.trim()}))\n    }\n\n    const handleSubmit=(e)=>{\n        e.preventDefault()  \n\n        const {name,number}=state\n\n        if(contacts.some(i=>{\n            return i.number===number || i.name.toLowerCase()===name.toLowerCase()\n        })){\n            alert(`This ${name} is already exist.`)\n\n            return\n        }     \n\n        addContact({name,number})\n            \n        setState({..._INITIAL_STATE_})\n    }\n\n        return(\n            <form>\n                <label>\n                    <h3>Name</h3>\n                    <input value={state.name} type=\"text\" name=\"name\" onChange={handleChange}/>\n                </label>\n                <label>\n                    <h3>Number</h3>\n                    <InputMask mask=\"+99(999)-99-99\" value={state.number} type=\"tel\" name=\"number\" onChange={handleChange}/>\n                </label>\n                <button type=\"submit\" onClick={handleSubmit}>Add contact</button>\n            </form>\n        ) \n}\n\nForm.propTypes={\n    addContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    })).isRequired,\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: state.contacts,\n  };\n};\n\nexport default connect(mapStateToProps, { addContact })(Form);","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst StyledButton=styled.button`\n    display: 'inline-block',\n    color: 'red',\n`\n\nfunction Contact({contact, onDelete}) {\n    return (\n        <li>\n            <span>{contact.name}: {contact.number}</span>\n            <StyledButton id={contact.id} onClick={onDelete}>delete</StyledButton>\n        </li>\n    )\n}\n\nContact.propTypes = {\n    contact: PropTypes.shape({\n        id:PropTypes.string.isRequired,\n        name:PropTypes.string.isRequired,\n        number:PropTypes.string.isRequired,\n    }).isRequired,\n    onDelete: PropTypes.func.isRequired\n}\n\nexport default Contact\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ContactItem from './contactItem/ContactItem';\nimport { connect } from \"react-redux\";\nimport { delContact } from '../../redux/actions'\n\nfunction Contacts({contacts, delContact}) {\n\n    const onDelete = (e)=>delContact(e.target.id)\n\n    return (\n        <ul>\n            {contacts.map(contact=> !contact.hidden && (\n                <ContactItem key={contact.id} contact={contact} onDelete={onDelete} />\n            ))}\n        </ul>\n    )\n}\n\nContacts.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id:PropTypes.string.isRequired,\n        name:PropTypes.string.isRequired,\n        number:PropTypes.string.isRequired,\n    })).isRequired,\n    delContact: PropTypes.func.isRequired\n}\n\nexport default connect(({contacts})=>({contacts}),{ delContact })(Contacts)\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\nimport {filter} from '../../redux/actions'\n\nfunction Filter({filter, value=\"\"}) {\n\n\tconst onChange = (e) => filter(e.target.value.trim())\n\n    return (\n\n        <>\n            <h4>Contacts filter</h4>\n            <input value={value} name=\"filter\" type=\"text\" onChange={onChange} />\n        </>\n    )\n}\n\nFilter.propTypes = {\n    filter:PropTypes.func.isRequired,\n    value:PropTypes.string.isRequired\n}\n\nexport default connect((state)=>({value: state.filter}),{ filter })(Filter)\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\nimport { loadContacts } from '../redux/actions'\nimport Section from '../Components/section/Section';\nimport Form from '../Components/form/Form';\nimport ContactsList from '../Components/contactsList/ContactsList';\nimport Filter from '../Components/filter/Filter';\n\nlet isMount = false\n\nconst App=({contacts=[], loadContacts})=>{\n    \n    if(!isMount && localStorage.getItem(\"contacts\")){\n        isMount = true\n        loadContacts(JSON.parse(localStorage.getItem(\"contacts\")))\n    }  \n    else{\n        localStorage.setItem(\"contacts\",JSON.stringify(contacts))\n    }\n    \n    return (\n            <>\n                <h1>Phonebook</h1>\n                <Section title=\"\">\n                    <Form />\n                </Section>\n                <Section title=\"Contacts\">\n                    <Filter />\n                    <ContactsList />\n                </Section>\n            </>\n    )\n}\n\nApp.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id:PropTypes.string.isRequired,\n        name:PropTypes.string.isRequired,\n        number:PropTypes.string.isRequired,\n    })).isRequired,\n    loadContacts: PropTypes.func.isRequired\n}\n\nexport default connect(({contacts})=>({contacts}), {loadContacts})(App)\n","import {  createReducer } from \"@reduxjs/toolkit\";\nimport {v4 as uuidv4} from 'uuid'\nimport {\n\tloadContacts,\n\taddContact,\n\tdelContact,\n\tfilter\n} from \"./actions\"\n\nconst f=(state)=>({filter: state.filter ? state.filter : \"\"})\n\n\nexport const reducer=createReducer({contacts:[], filter:\"\"},{\n\t[loadContacts]: (state,{payload})=>({...f(state), contacts: state.contacts ? [...state.contacts, ...payload] : [...payload]}),\n\t[addContact]: (state,{payload})=>{\n\t\tconst contacts = state.contacts ? [...state.contacts] : []\n\t\tcontacts.push({id:uuidv4(), name:payload.name, number:payload.number, hidden:false})\n\t\treturn ({...f(state), contacts});\n\t},\n\t[delContact]: (state,{payload})=>({...f(state), contacts: state.contacts ? state.contacts.filter(i=>i.id!==payload):[]}),\n\t[filter]: (state,{payload})=>{\n\t\tconst filtered=state.contacts.map(i=>{\n\t\t\t\tconst hidden = !i.name.toLowerCase().startsWith(payload.split(\" \").join(\"\").toLowerCase())\n\t\t\t\treturn {...i, hidden}\n\t\t\t})\n\t\treturn ({filter: payload, contacts:filtered})\n\t}\n})","import { configureStore} from \"@reduxjs/toolkit\";\nimport { reducer } from \"./reducer\";\n\nconst store = configureStore({reducer});\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport './normalize.css';\nimport './globalStyles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n\t<App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}